<?php

/**
 * @file
 * Theme specific functionality.
 */

use Drupal\file\Entity\File;
use Drupal\media\Entity\Media;
use Drupal\Component\Utility\Html;
use Drupal\node\NodeInterface;

/**
 * Implements hook_preprocess_html().
 */
function yukonca_glider_preprocess_html(&$variables) {
  $logged_in = \Drupal::currentUser()->isAuthenticated();
  if ($logged_in) {
    $variables['#attached']['library'][] = 'yukonca_glider/administrator';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function yukonca_glider_preprocess_links__language_block(&$variables) {
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();

  // Remove the active language from the list.
  unset($variables['links'][$language]);
}

/**
 * Implements template_preprocess_comment.
 */
function yukonca_glider_preprocess_comment(&$variables) {
  $date_formatter = \Drupal::service('date.formatter');
  $comment = $variables['elements']['#comment'];
  $variables['created'] = $date_formatter->format($comment->getCreatedTime(), 'yg_long');
}

/**
 * Implements hook_preprocess_HOOK().
 */
function yukonca_glider_preprocess_block(&$variables) {
  if ($variables['base_plugin_id'] == 'system_branding_block') {
    $logo_file = $variables['site_logo'];
    $pathinfo = pathinfo($logo_file);
    $variables['site_footer_logo'] = $pathinfo['dirname'] . '/images/svg/logo-white.svg';
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function yukonca_glider_preprocess_page__blog(&$variables) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];

  $taxonomy_entity_manager = \Drupal::entityTypeManager()->getStorage('taxonomy_term');
  if ($node->hasField('field_blog_type') && !$node->get('field_blog_type')->isEmpty()) {
    $tid = $node->get('field_blog_type')->target_id;
    $blog_type_term = $taxonomy_entity_manager->load($tid);
    if ($blog_type_term && $blog_type_term->hasField('field_agency_logo') && !$blog_type_term->get('field_agency_logo')->isEmpty()) {
      $image = $blog_type_term->get('field_agency_logo')->view([
        'type' => 'entity_reference_entity_view',
        'label' => 'hidden',
      ]);
      $variables['logo_url'] = $image;
    }
  }

  $variables['blog_category_subcategory'] = [];
  if ($node->hasField('field_category') && !$node->get('field_category')->isEmpty()) {
    $category_term = $taxonomy_entity_manager->load($node->get('field_category')->target_id);
    $variables['blog_category_subcategory'][] = $category_term->getName();
  }

  if ($node->hasField('field_subcategory') && !$node->get('field_subcategory')->isEmpty()) {
    $subcategory_term = $taxonomy_entity_manager->load($node->get('field_subcategory')->target_id);
    $variables['blog_category_subcategory'][] = $subcategory_term->getName();
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function yukonca_glider_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = \Drupal::routeMatch()->getParameter('node');
  if (!$node instanceof NodeInterface) {
    return;
  }

  $suggestions[] = 'page__node__' . $node->bundle();
}

/**
 * Implements hook_preprocess_HOOK().
 */
function yukonca_glider_preprocess_node__landing_page(&$variables) {
  if (!isset($variables['node']) && !isset($variables['view_mode'])) {
    return;
  }
  $view_mode = $variables['view_mode'];
  if ($view_mode !== 'primary_item_block') {
    return;
  }

  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];
  if (!$node->hasField('field_primary_content') || $node->get('field_primary_content')->isEmpty()) {
    return;
  }
  // Render only the first three links in field_primary_content.
  $links = $node->get('field_primary_content')->getValue();
  foreach ($links as $key => $link) {
    if ($key > 2) {
      $variables['content']['field_primary_content'][$key]['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function yukonca_glider_preprocess_node__multi_step_page(&$variables) {
  $section_paragraphs = array_column($variables["content"]["field_paragraphs"], '#paragraph');
  $node = $variables['node'];

  $variables['tabs']['items'] = [];
  foreach ($section_paragraphs as $paragraph) {
    $variables['tabs']['items'][] = [
      'title' => $paragraph->get('field_title')->getString(),
      'content' => $paragraph->get('field_section_content')->value,
    ];
  }

  $variables['tabs']['links_icon_type'] = $node->get('field_sequential_non_sequential')
    ->getString();
  // Use for pills ID.
  $variables['tabs']['id'] = Html::getUniqueId($node->getTitle());
}

/**
 * Implements hook_preprocess_HOOK().
 */
function yukonca_glider_preprocess_node__documents(&$variables) {
  $node = $variables['node'];
  if ($node->hasField('field_document_upload') && !$node->get('field_document_upload')->isEmpty()) {
    $media_file = $node->get('field_document_upload')->entity;
    if (!empty($media_file) && $media_file->hasField('field_media_file') && !$media_file->get('field_media_file')->isEmpty()) {
      $file = \Drupal::entityTypeManager()
        ->getStorage('file')
        ->load($media_file->get('field_media_file')->getString());
      if (!empty($file)) {
        $variables['document_size'] = format_size($file->getSize());
        $variables['document_type'] = str_replace('application/', '', $file->getMimeType());
      }
    }
  }
}
